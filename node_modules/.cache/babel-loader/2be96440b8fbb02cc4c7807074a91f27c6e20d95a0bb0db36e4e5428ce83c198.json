{"ast":null,"code":"var _jsxFileName = \"/Users/willyphillips/university-risk-dashboard/src/App.js\",\n  _s = $RefreshSig$();\n// src/App.js\n\nimport React, { useRef, useEffect } from 'react';\nimport mapboxgl from 'mapbox-gl';\nimport geojsonData from '/Users/willyphillips/university-risk-dashboard/src/data/UNI_shpfile_displayTrial.geojson';\nimport './App.css';\n\n// Set your Mapbox access token here\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nmapboxgl.accessToken = 'pk.eyJ1Ijoic2Nvb2J5ZG9vMjAyNCIsImEiOiJjbHlwa2FnNTUwcGc4MmpzNDNiMGczdTE3In0.-Wj3wZ8hFfE_Ty4UPDzKlg';\nfunction App() {\n  _s();\n  const mapContainer = useRef(null);\n  const map = useRef(null);\n\n  // Update these coordinates to center over the UK\n  const lng = -1.1743; // Longitude for the approximate center of the UK\n  const lat = 52.3555; // Latitude for the approximate center of the UK\n  const zoom = 5; // Adjust zoom level to fit the UK in view\n\n  useEffect(() => {\n    if (map.current) return; // Initialize map only once\n\n    map.current = new mapboxgl.Map({\n      container: mapContainer.current,\n      style: 'mapbox://styles/mapbox/streets-v11',\n      center: [lng, lat],\n      zoom: zoom\n    });\n\n    // Add navigation controls (optional)\n    map.current.addControl(new mapboxgl.NavigationControl());\n\n    // Add GeoJSON data as a source\n    map.current.on('load', () => {\n      map.current.addSource('uniData', {\n        type: 'geojson',\n        data: geojsonData\n      });\n\n      // Add a layer to display the GeoJSON data\n      map.current.addLayer({\n        id: 'uniLayer',\n        type: 'fill',\n        // Change to 'circle', 'line', etc., depending on your data\n        source: 'uniData',\n        paint: {\n          'fill-color': '#888888',\n          'fill-opacity': 0.5\n        }\n      });\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: mapContainer,\n      className: \"map-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Lk3Flgv7n4ByEejhurS8fIb2FSQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useRef","useEffect","mapboxgl","geojsonData","jsxDEV","_jsxDEV","accessToken","App","_s","mapContainer","map","lng","lat","zoom","current","Map","container","style","center","addControl","NavigationControl","on","addSource","type","data","addLayer","id","source","paint","children","ref","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/willyphillips/university-risk-dashboard/src/App.js"],"sourcesContent":["// src/App.js\n\nimport React, { useRef, useEffect } from 'react';\nimport mapboxgl from 'mapbox-gl';\nimport geojsonData from '/Users/willyphillips/university-risk-dashboard/src/data/UNI_shpfile_displayTrial.geojson';\nimport './App.css';\n\n// Set your Mapbox access token here\nmapboxgl.accessToken = 'pk.eyJ1Ijoic2Nvb2J5ZG9vMjAyNCIsImEiOiJjbHlwa2FnNTUwcGc4MmpzNDNiMGczdTE3In0.-Wj3wZ8hFfE_Ty4UPDzKlg';\n\nfunction App() {\n  const mapContainer = useRef(null);\n  const map = useRef(null);\n\n  // Update these coordinates to center over the UK\n  const lng = -1.1743; // Longitude for the approximate center of the UK\n  const lat = 52.3555; // Latitude for the approximate center of the UK\n  const zoom = 5;      // Adjust zoom level to fit the UK in view\n\n  useEffect(() => {\n    if (map.current) return; // Initialize map only once\n\n    map.current = new mapboxgl.Map({\n      container: mapContainer.current,\n      style: 'mapbox://styles/mapbox/streets-v11',\n      center: [lng, lat],\n      zoom: zoom,\n    });\n\n    // Add navigation controls (optional)\n    map.current.addControl(new mapboxgl.NavigationControl());\n\n    // Add GeoJSON data as a source\n    map.current.on('load', () => {\n      map.current.addSource('uniData', {\n        type: 'geojson',\n        data: geojsonData,\n      });\n\n      // Add a layer to display the GeoJSON data\n      map.current.addLayer({\n        id: 'uniLayer',\n        type: 'fill', // Change to 'circle', 'line', etc., depending on your data\n        source: 'uniData',\n        paint: {\n          'fill-color': '#888888',\n          'fill-opacity': 0.5,\n        },\n      });\n    });\n  }, []);\n\n  return (\n    <div>\n      <div ref={mapContainer} className=\"map-container\" />\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAChD,OAAOC,QAAQ,MAAM,WAAW;AAChC,OAAOC,WAAW,MAAM,0FAA0F;AAClH,OAAO,WAAW;;AAElB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACAH,QAAQ,CAACI,WAAW,GAAG,mGAAmG;AAE1H,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAMC,YAAY,GAAGT,MAAM,CAAC,IAAI,CAAC;EACjC,MAAMU,GAAG,GAAGV,MAAM,CAAC,IAAI,CAAC;;EAExB;EACA,MAAMW,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC;EACrB,MAAMC,GAAG,GAAG,OAAO,CAAC,CAAC;EACrB,MAAMC,IAAI,GAAG,CAAC,CAAC,CAAM;;EAErBZ,SAAS,CAAC,MAAM;IACd,IAAIS,GAAG,CAACI,OAAO,EAAE,OAAO,CAAC;;IAEzBJ,GAAG,CAACI,OAAO,GAAG,IAAIZ,QAAQ,CAACa,GAAG,CAAC;MAC7BC,SAAS,EAAEP,YAAY,CAACK,OAAO;MAC/BG,KAAK,EAAE,oCAAoC;MAC3CC,MAAM,EAAE,CAACP,GAAG,EAAEC,GAAG,CAAC;MAClBC,IAAI,EAAEA;IACR,CAAC,CAAC;;IAEF;IACAH,GAAG,CAACI,OAAO,CAACK,UAAU,CAAC,IAAIjB,QAAQ,CAACkB,iBAAiB,CAAC,CAAC,CAAC;;IAExD;IACAV,GAAG,CAACI,OAAO,CAACO,EAAE,CAAC,MAAM,EAAE,MAAM;MAC3BX,GAAG,CAACI,OAAO,CAACQ,SAAS,CAAC,SAAS,EAAE;QAC/BC,IAAI,EAAE,SAAS;QACfC,IAAI,EAAErB;MACR,CAAC,CAAC;;MAEF;MACAO,GAAG,CAACI,OAAO,CAACW,QAAQ,CAAC;QACnBC,EAAE,EAAE,UAAU;QACdH,IAAI,EAAE,MAAM;QAAE;QACdI,MAAM,EAAE,SAAS;QACjBC,KAAK,EAAE;UACL,YAAY,EAAE,SAAS;UACvB,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEvB,OAAA;IAAAwB,QAAA,eACExB,OAAA;MAAKyB,GAAG,EAAErB,YAAa;MAACsB,SAAS,EAAC;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjD,CAAC;AAEV;AAAC3B,EAAA,CA/CQD,GAAG;AAAA6B,EAAA,GAAH7B,GAAG;AAiDZ,eAAeA,GAAG;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}